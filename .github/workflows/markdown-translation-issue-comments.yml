name: 'markdown-translation-issue-comments'
on:
  issue_comment:
    types: [created, edited]
jobs:
  test:
    permissions:
      pull-requests: write
      contents: write
      packages: write
      issues: write
    runs-on: ubuntu-latest
    steps:
      - name: parse markdown-translation command from comments
        uses: actions-ecosystem/action-regex-match@v2.0.2
        with:
          text: ${{github.event.comment.body}}
          regex: '^markdown-translation:\s*(extract|compose)\s+([\w\d-]+)\s+([\w\d-]+)\s+([\w]+\-[\w]+)\s+([\w]+\-[\w]+)\s+'
        id: parameters-parsing
      - name: check command parsing
        run: echo -e "status=${{steps.parameters-parsing.outputs.match != ''}}"
        id: parse-status
        shell: bash
      - name: use parameters
        run: |
          echo -e "${{steps.parse-status.outputs.status}}"
          echo -e "${{steps.parameters-parsing.outputs.group1}}"
          echo -e "${{steps.parameters-parsing.outputs.group2}}"
          echo -e "${{steps.parameters-parsing.outputs.group3}}"
          echo -e "${{steps.parameters-parsing.outputs.group4}}"
          echo -e "${{steps.parameters-parsing.outputs.group5}}"
        shell: bash
#      - name:
#      - name: parse parameters
#        id: parse-parameters
#        shell: bash
#        run: |
#          echo -e "pr=${{github.event.inputs.pr}}\ncommand=${{github.event.inputs.command}}\ninput=${{github.event.inputs.input}}\noutput=${{github.event.inputs.output}}\nsll=${{github.event.inputs.sll}}\ntll=${{github.event.inputs.tll}}\ngit_name=${{github.event.inputs.git_name}}\ngit_email=${{github.event.inputs.git_email}}\nextract_message=${{github.event.inputs.extract_message}}\ncompose_message=${{github.event.inputs.compose_message}}" >> $GITHUB_OUTPUT
#      - uses: actions/checkout@v4
#      - uses: ./
#        env:
#          GITHUB_TOKEN: ${{secrets.GITHUB_TOKEN}}
#        with:
#          pr: ${{steps.parse-parameters.outputs.pr}}
#          command: ${{steps.parse-parameters.outputs.command}}
#          input: ${{steps.parse-parameters.outputs.input}}
#          output: ${{steps.parse-parameters.outputs.output}}
#          sll: ${{steps.parse-parameters.outputs.sll}}
#          tll: ${{steps.parse-parameters.outputs.tll}}
#          git_name: ${{steps.parse-parameters.outputs.git_name}}
#          git_email: ${{steps.parse-parameters.outputs.git_email}}
#          extract_message: ${{steps.parse-parameters.outputs.extract_message}}
#          compose_message: ${{steps.parse-parameters.outputs.compose_message}}
